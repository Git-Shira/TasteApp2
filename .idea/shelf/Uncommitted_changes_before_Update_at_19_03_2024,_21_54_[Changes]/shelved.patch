Index: app/src/main/res/layout/fragment_home.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_home.xml b/app/src/main/res/layout/fragment_home.xml
new file mode 100644
--- /dev/null	(date 1710793215972)
+++ b/app/src/main/res/layout/fragment_home.xml	(date 1710793215972)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+    tools:context=".ui.posts.PostsFragment">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:gravity="center"
+        android:padding="8dp">
+
+
+        <ImageView
+            android:id="@+id/profile_image"
+            android:layout_width="50dp"
+            android:layout_height="50dp"
+            android:layout_marginEnd="8dp"/>
+
+        <TextView
+            android:id="@+id/title"
+            android:layout_width="0dp"
+            android:layout_weight="1"
+            android:layout_height="wrap_content"
+            android:textSize="16dp"
+            android:textStyle="bold"
+            android:text="@string/what_is_on_your_mind"/>
+    </LinearLayout>
+
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="8dp"
+        android:background="@color/dark_grey"/>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:padding="8dp">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/show_my_post"
+            android:textStyle="bold"
+            android:layout_marginEnd="16dp"/>
+        <androidx.appcompat.widget.SwitchCompat
+            android:id="@+id/switch_button"
+            android:checked="false"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"/>
+    </LinearLayout>
+
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="1dp"
+        android:background="@color/dark_grey"/>
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/list"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        android:layout_weight="1"
+        app:layoutManager="androidx.recyclerview.widget.LinearLayoutManager"/>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/AlertDialogUtils.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mypostsapp\n\nimport android.content.Context\nimport androidx.appcompat.app.AlertDialog\n\nclass AlertDialogUtils {\n\n    companion object {\n        fun showAlert(context: Context, title: String, message: String) {\n            AlertDialog.Builder(context)\n                .setMessage(message)\n                .setTitle(title)\n                .show()\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/AlertDialogUtils.kt b/app/src/main/java/com/example/mypostsapp/AlertDialogUtils.kt
--- a/app/src/main/java/com/example/mypostsapp/AlertDialogUtils.kt	(revision dc13b3ba318ff7f4700773511bf9ca84de529903)
+++ b/app/src/main/java/com/example/mypostsapp/AlertDialogUtils.kt	(date 1710877936289)
@@ -1,6 +1,7 @@
 package com.example.mypostsapp
 
 import android.content.Context
+import android.content.DialogInterface
 import androidx.appcompat.app.AlertDialog
 
 class AlertDialogUtils {
@@ -12,5 +13,19 @@
                 .setTitle(title)
                 .show()
         }
+
+        fun showAlertWithButtons(context: Context, title: String, message: String,
+                      positiveListener: DialogInterface.OnClickListener, negativeListener: DialogInterface.OnClickListener) {
+            AlertDialog.Builder(context)
+                .setMessage(message)
+                .setTitle(title)
+                .setPositiveButton(R.string.yes) {dialog, x->
+                    positiveListener.onClick(dialog, x)
+                }
+                .setNegativeButton(R.string.cancel){dialog, x->
+                    negativeListener.onClick(dialog, x)
+                }
+                .show()
+        }
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
new file mode 100644
--- /dev/null	(date 1710697179442)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1710697179442)
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:id="@+id/container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <com.google.android.material.bottomnavigation.BottomNavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="0dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="0dp"
+        android:layout_marginEnd="0dp"
+        android:background="?android:attr/windowBackground"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:menu="@menu/bottom_nav_menu" />
+
+    <fragment
+        android:id="@+id/nav_host_fragment_activity_main"
+        android:name="androidx.navigation.fragment.NavHostFragment"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:defaultNavHost="true"
+        app:layout_constraintBottom_toTopOf="@id/nav_view"
+        app:layout_constraintLeft_toLeftOf="parent"
+        app:layout_constraintRight_toRightOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        app:navGraph="@navigation/mobile_navigation" />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
new file mode 100644
--- /dev/null	(date 1710674751585)
+++ b/settings.gradle.kts	(date 1710674751585)
@@ -0,0 +1,18 @@
+pluginManagement {
+    repositories {
+        google()
+        mavenCentral()
+        gradlePluginPortal()
+    }
+}
+dependencyResolutionManagement {
+    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
+    repositories {
+        google()
+        mavenCentral()
+    }
+}
+
+rootProject.name = "MyPostsApp"
+include(":app")
+ 
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/entities/Post.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mypostsapp.entities\n\nimport java.io.Serializable\n\ndata class Post(var uid: String?=null, var description: String? = null,\n                var image: String ?= null,\n                var createdUser: User ?= null, var likeUserIds: List<String> ?= arrayListOf(), var created: Long ?= null ): Serializable {\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/entities/Post.kt b/app/src/main/java/com/example/mypostsapp/entities/Post.kt
--- a/app/src/main/java/com/example/mypostsapp/entities/Post.kt	(revision dc13b3ba318ff7f4700773511bf9ca84de529903)
+++ b/app/src/main/java/com/example/mypostsapp/entities/Post.kt	(date 1710877936295)
@@ -1,8 +1,22 @@
 package com.example.mypostsapp.entities
 
+import androidx.room.Entity
+import androidx.room.PrimaryKey
+import androidx.room.TypeConverters
+
+import com.example.mypostsapp.room.PostLocationConverter
+import com.example.mypostsapp.room.StringsConverter
+import com.example.mypostsapp.room.UssrConverter
 import java.io.Serializable
 
-data class Post(var uid: String?=null, var description: String? = null,
-                var image: String ?= null,
-                var createdUser: User ?= null, var likeUserIds: List<String> ?= arrayListOf(), var created: Long ?= null ): Serializable {
-}
+@Entity(tableName = "posts")
+data class Post(
+
+    @PrimaryKey var uid: String = "",
+    var description: String? = null,
+    var image: String? = null,
+    @TypeConverters(UssrConverter::class) var createdUser: User? = null,
+    @TypeConverters(StringsConverter::class)  var likeUserIds: ArrayList<String>? = arrayListOf(),
+    var created: Long? = null,
+    @TypeConverters(PostLocationConverter::class) var location: PostLocation? = null
+) : Serializable
Index: app/src/main/java/com/example/mypostsapp/room/UserDao.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/room/UserDao.kt b/app/src/main/java/com/example/mypostsapp/room/UserDao.kt
new file mode 100644
--- /dev/null	(date 1710877936286)
+++ b/app/src/main/java/com/example/mypostsapp/room/UserDao.kt	(date 1710877936286)
@@ -0,0 +1,17 @@
+package com.example.mypostsapp.room
+
+import androidx.room.Dao
+import androidx.room.Insert
+import androidx.room.OnConflictStrategy
+import androidx.room.Query
+
+import com.example.mypostsapp.entities.User
+
+@Dao
+interface UserDao {
+    @Insert(onConflict = OnConflictStrategy.REPLACE)
+    suspend fun insertUser(user: User)
+
+    @Query("SELECT * FROM users WHERE uid = :id")
+    suspend fun getUserById(id: String): User?
+}
Index: app/src/main/java/com/example/mypostsapp/DataBaseManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/DataBaseManager.kt b/app/src/main/java/com/example/mypostsapp/DataBaseManager.kt
new file mode 100644
--- /dev/null	(date 1710794723130)
+++ b/app/src/main/java/com/example/mypostsapp/DataBaseManager.kt	(date 1710794723130)
@@ -0,0 +1,87 @@
+package com.example.mypostsapp
+
+import com.example.mypostsapp.entities.Post
+import com.example.mypostsapp.entities.User
+import com.example.mypostsapp.room.RoomManager
+import com.google.android.gms.tasks.OnCompleteListener
+import com.google.firebase.firestore.DocumentSnapshot
+import com.google.firebase.firestore.FirebaseFirestore
+import kotlinx.coroutines.CoroutineScope
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+import java.util.ArrayList
+import java.util.EventListener
+import java.util.function.Consumer
+
+class DataBaseManager {
+
+    companion object {
+        private const val USERS = "users"
+        private const val POSTS = "posts"
+
+        fun createUser(user: User, listener: OnCompleteListener<Void>) {
+            FirebaseFirestore.getInstance()
+                .collection(USERS)
+                .document(user.uid!!)
+                .set(user)
+                .addOnCompleteListener(listener)
+        }
+
+        fun fetchPosts(viewModelScope: CoroutineScope, posts: ArrayList<Post>, onDone: Runnable) {
+            posts.clear()
+            viewModelScope.launch(Dispatchers.IO) {
+                posts.addAll(RoomManager.database.postDao().getAll())
+                onDone.run()
+            }
+            FirebaseFirestore.getInstance()
+                .collection(POSTS)
+                .get()
+                .addOnSuccessListener {
+                    val size = it.documents.size
+                    posts.clear()
+                    it.documents.forEachIndexed { index, documentSnapshot ->
+                        val post = documentSnapshot.toObject(Post::class.java)
+                        FirebaseFirestore.getInstance()
+                            .collection(USERS)
+                            .document(post?.createdUser?.uid!!)
+                            .get()
+                            .addOnSuccessListener {userSnapshot->
+                                post.createdUser = userSnapshot.toObject(User::class.java)
+                                posts.add(post)
+                                if (posts.size == size) {
+                                    onDone.run()
+                                }
+                            }
+                    }
+                }
+        }
+
+        fun getCurrentUser(uid: String, listener: OnCompleteListener<DocumentSnapshot>) {
+            FirebaseFirestore.getInstance()
+                .collection(USERS)
+                .document(uid)
+                .get()
+                .addOnCompleteListener{
+                    listener.onComplete(it)
+                }
+
+        }
+
+        fun savePost(post: Post, user: User? = null, onComplete: OnCompleteListener<Void>? = null) {
+            FirebaseFirestore.getInstance()
+                .collection(POSTS)
+                .document(post.uid!!)
+                .set(post)
+                .addOnCompleteListener {
+                    onComplete?.onComplete(it)
+                }
+        }
+
+        fun deletePost(selectedPost: Post, user: User ?) {
+            FirebaseFirestore.getInstance()
+                .collection(POSTS)
+                .document(selectedPost.uid!!)
+                .delete()
+        }
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/fragment_dashboard.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_dashboard.xml b/app/src/main/res/layout/fragment_dashboard.xml
new file mode 100644
--- /dev/null	(date 1710706988627)
+++ b/app/src/main/res/layout/fragment_dashboard.xml	(date 1710706988627)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <!--fragment to display our maps-->
+    <fragment xmlns:tools="http://schemas.android.com/tools"
+        android:id="@+id/map"
+        android:name="com.google.android.gms.maps.SupportMapFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:context=".MapsActivity" />
+
+    <!--search view to search our location-->
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/MyApp.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/MyApp.kt b/app/src/main/java/com/example/mypostsapp/MyApp.kt
new file mode 100644
--- /dev/null	(date 1710877936292)
+++ b/app/src/main/java/com/example/mypostsapp/MyApp.kt	(date 1710877936292)
@@ -0,0 +1,13 @@
+package com.example.mypostsapp
+
+import android.app.Application
+import com.example.mypostsapp.room.RoomManager
+
+class MyApp : Application() {
+
+
+    override fun onCreate() {
+        super.onCreate()
+        RoomManager.initManager(this)
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/MainActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.mypostsapp\n\nimport android.os.Bundle\nimport com.google.android.material.bottomnavigation.BottomNavigationView\nimport androidx.appcompat.app.AppCompatActivity\nimport androidx.navigation.findNavController\nimport androidx.navigation.ui.AppBarConfiguration\nimport androidx.navigation.ui.setupActionBarWithNavController\nimport androidx.navigation.ui.setupWithNavController\nimport com.example.mypostsapp.databinding.ActivityMainBinding\nimport com.example.mypostsapp.entities.User\n\nclass MainActivity : AppCompatActivity() {\n\n    private lateinit var binding: ActivityMainBinding\n\n    var currentUser : User?= null\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        binding = ActivityMainBinding.inflate(layoutInflater)\n        setContentView(binding.root)\n\n        val navView: BottomNavigationView = binding.navView\n\n        val navController = findNavController(R.id.nav_host_fragment_activity_main)\n\n        val appBarConfiguration = AppBarConfiguration(\n            setOf(\n                R.id.navigation_home, R.id.navigation_dashboard, R.id.navigation_notifications\n            )\n        )\n        setupActionBarWithNavController(navController, appBarConfiguration)\n        navView.setupWithNavController(navController)\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/MainActivity.kt b/app/src/main/java/com/example/mypostsapp/MainActivity.kt
--- a/app/src/main/java/com/example/mypostsapp/MainActivity.kt	(revision dc13b3ba318ff7f4700773511bf9ca84de529903)
+++ b/app/src/main/java/com/example/mypostsapp/MainActivity.kt	(date 1710877936299)
@@ -14,8 +14,6 @@
 
     private lateinit var binding: ActivityMainBinding
 
-    var currentUser : User?= null
-
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
 
@@ -28,7 +26,7 @@
 
         val appBarConfiguration = AppBarConfiguration(
             setOf(
-                R.id.navigation_home, R.id.navigation_dashboard, R.id.navigation_notifications
+                R.id.navigation_home, R.id.navigation_dashboard, R.id.navigation_profile
             )
         )
         setupActionBarWithNavController(navController, appBarConfiguration)
Index: app/src/main/res/layout/fragment_create_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_create_profile.xml b/app/src/main/res/layout/fragment_create_profile.xml
new file mode 100644
--- /dev/null	(date 1710792288018)
+++ b/app/src/main/res/layout/fragment_create_profile.xml	(date 1710792288018)
@@ -0,0 +1,134 @@
+<?xml version="1.0" encoding="utf-8"?>
+<ScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:orientation="vertical"
+    android:padding="16dp">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical">
+
+
+        <androidx.appcompat.widget.AppCompatImageView
+            android:id="@+id/imageView"
+            android:layout_width="200dp"
+            android:layout_height="200dp"
+            android:layout_marginTop="16dp"
+            android:scaleType="fitXY"
+            android:src="@drawable/baseline_person_24"
+            android:layout_gravity="center_horizontal"
+            android:foreground="@drawable/border" />
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="4dp"
+            android:layout_marginBottom="32dp"
+            android:gravity="center"
+            android:orientation="horizontal">
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/takePhoto"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:text="@string/take_a_photo"
+                android:textStyle="bold"
+                app:cornerRadius="20dp"/>
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/addFromGallery"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_marginStart="8dp"
+                android:text="@string/add_from_gallery"
+                android:textStyle="bold"
+                app:cornerRadius="20dp" />
+
+        </LinearLayout>
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:hint="@string/full_name">
+
+            <com.google.android.material.textfield.TextInputEditText
+                android:id="@+id/fullNameET"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:inputType="textEmailAddress"
+                android:maxLines="1" />
+        </com.google.android.material.textfield.TextInputLayout>
+
+        <androidx.appcompat.widget.AppCompatTextView
+            android:id="@+id/error_name"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="@string/please_enter_full_name"
+            android:textColor="@color/red"
+            android:visibility="gone" />
+
+        <com.google.android.material.textfield.TextInputLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:layout_marginTop="8dp"
+            android:hint="@string/full_name">
+
+            <com.google.android.material.textfield.TextInputEditText
+                android:id="@+id/emailET"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:inputType="textEmailAddress"
+                android:enabled="false"
+                android:maxLines="1" />
+        </com.google.android.material.textfield.TextInputLayout>
+
+
+        <!--        <com.google.android.material.textfield.TextInputLayout-->
+        <!--            android:id="@+id/locationContainer"-->
+        <!--            android:layout_width="match_parent"-->
+        <!--            android:layout_height="wrap_content"-->
+        <!--            android:layout_marginTop="16dp"-->
+        <!--            android:focusable="false"-->
+        <!--            android:hint="@string/location">-->
+
+        <!--            <com.google.android.material.textfield.TextInputEditText-->
+        <!--                android:id="@+id/locationET"-->
+        <!--                android:layout_width="match_parent"-->
+        <!--                android:layout_height="wrap_content"-->
+        <!--                android:focusable="false"-->
+        <!--                android:maxLines="1" />-->
+        <!--        </com.google.android.material.textfield.TextInputLayout>-->
+
+        <androidx.appcompat.widget.LinearLayoutCompat
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:padding="16dp"
+            android:gravity="center">
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/save"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginEnd="16dp"
+                android:text="@string/save" />
+
+            <com.google.android.material.button.MaterialButton
+                android:id="@+id/sign_out"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:layout_gravity="center_horizontal"
+                android:layout_marginTop="16dp"
+                android:text="@string/sign_out"
+                android:visibility="gone"/>
+        </androidx.appcompat.widget.LinearLayoutCompat>
+
+
+
+    </LinearLayout>
+
+</ScrollView>
\ No newline at end of file
Index: app/src/main/res/menu/bottom_nav_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/bottom_nav_menu.xml b/app/src/main/res/menu/bottom_nav_menu.xml
new file mode 100644
--- /dev/null	(date 1710695346245)
+++ b/app/src/main/res/menu/bottom_nav_menu.xml	(date 1710695346245)
@@ -0,0 +1,19 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item
+        android:id="@+id/navigation_home"
+        android:icon="@drawable/ic_home_black_24dp"
+        android:title="@string/title_home" />
+
+    <item
+        android:id="@+id/navigation_dashboard"
+        android:icon="@drawable/ic_dashboard_black_24dp"
+        android:title="@string/map" />
+
+    <item
+        android:id="@+id/navigation_profile"
+        android:icon="@drawable/baseline_person_24"
+        android:title="@string/profile" />
+
+</menu>
\ No newline at end of file
Index: app/src/main/res/layout/activity_create_or_update_post2.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_create_or_update_post2.xml b/app/src/main/res/layout/activity_create_or_update_post2.xml
new file mode 100644
--- /dev/null	(date 1710658626190)
+++ b/app/src/main/res/layout/activity_create_or_update_post2.xml	(date 1710658626190)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/container"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    tools:context=".CreateOrUpdatePostActivity" />
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/ui/dashboard/MapsFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/ui/dashboard/MapsFragment.kt b/app/src/main/java/com/example/mypostsapp/ui/dashboard/MapsFragment.kt
new file mode 100644
--- /dev/null	(date 1710794902884)
+++ b/app/src/main/java/com/example/mypostsapp/ui/dashboard/MapsFragment.kt	(date 1710794902884)
@@ -0,0 +1,144 @@
+package com.example.mypostsapp.ui.dashboard
+
+import android.Manifest
+import android.content.pm.PackageManager
+import android.location.Address
+import android.location.Geocoder
+import android.location.Location
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import androidx.activity.result.contract.ActivityResultContracts
+import androidx.core.app.ActivityCompat
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModelProvider
+import com.example.mypostsapp.R
+import com.example.mypostsapp.databinding.FragmentDashboardBinding
+import com.example.mypostsapp.entities.Post
+import com.example.mypostsapp.entities.PostLocation
+import com.google.android.gms.location.FusedLocationProviderClient
+import com.google.android.gms.location.LocationServices
+import com.google.android.gms.maps.CameraUpdateFactory
+import com.google.android.gms.maps.GoogleMap
+import com.google.android.gms.maps.OnMapReadyCallback
+import com.google.android.gms.maps.SupportMapFragment
+import com.google.android.gms.maps.model.LatLng
+import com.google.android.gms.maps.model.MarkerOptions
+import com.google.android.gms.tasks.OnSuccessListener
+import java.util.Locale
+
+
+class MapsFragment : Fragment() {
+
+    private var mapViewModel: MapViewModel ?= null
+    private var _binding: FragmentDashboardBinding? = null
+    private var myLocation: Location ?= null
+    private var mMap: GoogleMap ?= null
+    private var address: Address ?= null
+
+    private val binding get() = _binding!!
+
+    private var fusedLocationClient: FusedLocationProviderClient? = null
+    private val requestPermissionLauncher = registerForActivityResult<String, Boolean>(
+        ActivityResultContracts.RequestPermission()
+    ) { isGranted: Boolean ->
+        if (isGranted) {
+            findMyLocation()
+        }
+    }
+
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        mapViewModel =
+            ViewModelProvider(this).get(MapViewModel::class.java)
+
+        _binding = FragmentDashboardBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+        fusedLocationClient = LocationServices.getFusedLocationProviderClient(requireContext())
+
+        return root
+    }
+
+    override fun onViewCreated(view: View, savedInstanceState: Bundle?) {
+        super.onViewCreated(view, savedInstanceState)
+        findMyLocationIfHasAccess()
+        val mapFragment =  childFragmentManager.findFragmentById(R.id.map) as? SupportMapFragment
+
+        // at last we calling our map fragment to update.
+        mapFragment?.getMapAsync(OnMapReadyCallback { googleMap: GoogleMap ->
+            mMap = googleMap
+            mapViewModel?.postsLD?.observe(viewLifecycleOwner) {
+                it.forEach {
+                    markLocation(it)
+                }
+            }
+        })
+
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+
+    private fun findMyLocationIfHasAccess() {
+        if (ActivityCompat.checkSelfPermission(requireContext(), Manifest.permission.ACCESS_FINE_LOCATION)
+            != PackageManager.PERMISSION_GRANTED && (ActivityCompat.checkSelfPermission(requireContext(), Manifest.permission.ACCESS_COARSE_LOCATION)
+                    != PackageManager.PERMISSION_GRANTED)
+        ) {
+            ActivityCompat.requestPermissions(requireActivity(), arrayOf(Manifest.permission.ACCESS_FINE_LOCATION, Manifest.permission.ACCESS_COARSE_LOCATION), 1)
+        } else {
+            findMyLocation()
+        }
+    }
+
+    private fun findMyLocation() {
+        if (ActivityCompat.checkSelfPermission(requireContext(), Manifest.permission.ACCESS_FINE_LOCATION)
+            == PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(requireContext(), Manifest.permission.ACCESS_COARSE_LOCATION)
+            == PackageManager.PERMISSION_GRANTED
+        ) {
+            fusedLocationClient?.lastLocation?.addOnSuccessListener(
+                    requireActivity(),
+                    OnSuccessListener<Location> { location -> // Got last known location. In some rare situations this can be null.
+                        myLocation = location
+                        markMyLocation()
+                    })
+        }
+    }
+
+    private fun markMyLocation() {
+        val latitude: Double = myLocation?.latitude ?: 0.0
+        val longitude: Double = myLocation?.longitude ?: 0.0
+        val latLng = LatLng(latitude, longitude)
+        mMap?.addMarker(MarkerOptions().title(getString(R.string.my_Location)).position(latLng))
+        mMap?.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 16f))
+        val geocoder = Geocoder(requireContext(), Locale.getDefault())
+        try {
+            val address = geocoder.getFromLocation(latitude, longitude, 1)!![0]
+            this.address = address
+        } catch (e: Exception) {
+        }
+    }
+
+    private fun markLocation(post: Post) {
+        mMap?.let {map->
+            post.let { post ->
+                val latitude: Double = post.location?.latitude ?: 0.0
+                val longitude: Double = post.location?.longitude ?: 0.0
+                val latLng = LatLng(latitude, longitude)
+                map.addMarker(MarkerOptions().title(post.createdUser?.name).position(latLng))
+                val geocoder = Geocoder(requireContext(), Locale.getDefault())
+                try {
+                    val address = geocoder.getFromLocation(latitude, longitude, 1)!![0]
+                    this.address = address
+                } catch (e: Exception) {
+                }
+            }
+        }
+
+    }
+}
\ No newline at end of file
Index: app/src/main/res/xml/backup_rules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/xml/backup_rules.xml b/app/src/main/res/xml/backup_rules.xml
new file mode 100644
--- /dev/null	(date 1710674752092)
+++ b/app/src/main/res/xml/backup_rules.xml	(date 1710674752092)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+   Sample backup rules file; uncomment and customize as necessary.
+   See https://developer.android.com/guide/topics/data/autobackup
+   for details.
+   Note: This file is ignored for devices older that API 31
+   See https://developer.android.com/about/versions/12/backup-restore
+-->
+<full-backup-content>
+    <!--
+   <include domain="sharedpref" path="."/>
+   <exclude domain="sharedpref" path="device.xml"/>
+-->
+</full-backup-content>
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/ui/dashboard/MapViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/ui/dashboard/MapViewModel.kt b/app/src/main/java/com/example/mypostsapp/ui/dashboard/MapViewModel.kt
new file mode 100644
--- /dev/null	(date 1710777933970)
+++ b/app/src/main/java/com/example/mypostsapp/ui/dashboard/MapViewModel.kt	(date 1710777933970)
@@ -0,0 +1,27 @@
+package com.example.mypostsapp.ui.dashboard
+
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+import androidx.lifecycle.viewModelScope
+import com.example.mypostsapp.DataBaseManager
+import com.example.mypostsapp.entities.Post
+import com.example.mypostsapp.room.RoomManager
+import kotlinx.coroutines.Dispatchers
+import kotlinx.coroutines.launch
+
+class MapViewModel : ViewModel() {
+
+    private val posts: ArrayList<Post> = arrayListOf()
+    val postsLD: MutableLiveData<ArrayList<Post>> = MutableLiveData()
+
+    init {
+        DataBaseManager.fetchPosts(viewModelScope, posts, Runnable {
+            postsLD.postValue(posts)
+            viewModelScope.launch(Dispatchers.IO) {
+                posts.forEach {
+                    RoomManager.database.postDao().insertPost(it)
+                }
+            }
+        })
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/room/AppDatabase.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/room/AppDatabase.kt b/app/src/main/java/com/example/mypostsapp/room/AppDatabase.kt
new file mode 100644
--- /dev/null	(date 1710877936311)
+++ b/app/src/main/java/com/example/mypostsapp/room/AppDatabase.kt	(date 1710877936311)
@@ -0,0 +1,14 @@
+package com.example.mypostsapp.room
+
+import androidx.room.Database
+import androidx.room.RoomDatabase
+import androidx.room.TypeConverters
+import com.example.mypostsapp.entities.Post
+import com.example.mypostsapp.entities.User
+
+@Database(entities = [User::class, Post::class], version = 1)
+@TypeConverters(PostLocationConverter::class, UssrConverter::class, StringsConverter::class)
+abstract class AppDatabase : RoomDatabase() {
+    abstract fun userDao(): UserDao
+    abstract fun postDao(): PostDao
+}
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/room/UssrConverter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/room/UssrConverter.kt b/app/src/main/java/com/example/mypostsapp/room/UssrConverter.kt
new file mode 100644
--- /dev/null	(date 1710877936314)
+++ b/app/src/main/java/com/example/mypostsapp/room/UssrConverter.kt	(date 1710877936314)
@@ -0,0 +1,17 @@
+package com.example.mypostsapp.room
+
+import androidx.room.TypeConverter
+import com.example.mypostsapp.entities.User
+import com.google.gson.Gson
+
+class UssrConverter {
+    @TypeConverter
+    fun fromUser(user: User?): String? {
+        return user?.let { Gson().toJson(it) }
+    }
+
+    @TypeConverter
+    fun toUser(data: String?): User? {
+        return data?.let { Gson().fromJson(it, User::class.java) }
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/ui/home/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/ui/home/HomeFragment.kt b/app/src/main/java/com/example/mypostsapp/ui/home/HomeFragment.kt
new file mode 100644
--- /dev/null	(date 1710675698334)
+++ b/app/src/main/java/com/example/mypostsapp/ui/home/HomeFragment.kt	(date 1710675698334)
@@ -0,0 +1,42 @@
+package com.example.mypostsapp.ui.home
+
+import android.os.Bundle
+import android.view.LayoutInflater
+import android.view.View
+import android.view.ViewGroup
+import android.widget.TextView
+import androidx.fragment.app.Fragment
+import androidx.lifecycle.ViewModelProvider
+import com.example.mypostsapp.databinding.FragmentHomeBinding
+
+class HomeFragment : Fragment() {
+
+    private var _binding: FragmentHomeBinding? = null
+
+    // This property is only valid between onCreateView and
+    // onDestroyView.
+    private val binding get() = _binding!!
+
+    override fun onCreateView(
+        inflater: LayoutInflater,
+        container: ViewGroup?,
+        savedInstanceState: Bundle?
+    ): View {
+        val homeViewModel =
+            ViewModelProvider(this).get(HomeViewModel::class.java)
+
+        _binding = FragmentHomeBinding.inflate(inflater, container, false)
+        val root: View = binding.root
+
+        val textView: TextView = binding.title
+        homeViewModel.text.observe(viewLifecycleOwner) {
+            textView.text = it
+        }
+        return root
+    }
+
+    override fun onDestroyView() {
+        super.onDestroyView()
+        _binding = null
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/room/RoomManager.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/room/RoomManager.kt b/app/src/main/java/com/example/mypostsapp/room/RoomManager.kt
new file mode 100644
--- /dev/null	(date 1710877936297)
+++ b/app/src/main/java/com/example/mypostsapp/room/RoomManager.kt	(date 1710877936297)
@@ -0,0 +1,17 @@
+package com.example.mypostsapp.room
+
+import android.content.Context
+import androidx.room.Room
+
+object RoomManager {
+    lateinit var database: AppDatabase
+
+    fun initManager(applicationContext: Context) {
+        database = Room.databaseBuilder(
+            applicationContext,
+            AppDatabase::class.java,
+            "my_database"
+        ).build()
+
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/ui/home/HomeViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/ui/home/HomeViewModel.kt b/app/src/main/java/com/example/mypostsapp/ui/home/HomeViewModel.kt
new file mode 100644
--- /dev/null	(date 1710674752182)
+++ b/app/src/main/java/com/example/mypostsapp/ui/home/HomeViewModel.kt	(date 1710674752182)
@@ -0,0 +1,13 @@
+package com.example.mypostsapp.ui.home
+
+import androidx.lifecycle.LiveData
+import androidx.lifecycle.MutableLiveData
+import androidx.lifecycle.ViewModel
+
+class HomeViewModel : ViewModel() {
+
+    private val _text = MutableLiveData<String>().apply {
+        value = "This is home Fragment"
+    }
+    val text: LiveData<String> = _text
+}
\ No newline at end of file
Index: app/src/main/java/com/example/mypostsapp/entities/User.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/mypostsapp/entities/User.kt b/app/src/main/java/com/example/mypostsapp/entities/User.kt
new file mode 100644
--- /dev/null	(date 1710793891373)
+++ b/app/src/main/java/com/example/mypostsapp/entities/User.kt	(date 1710793891373)
@@ -0,0 +1,14 @@
+package com.example.mypostsapp.entities
+
+import androidx.room.Entity
+import androidx.room.PrimaryKey
+import androidx.room.TypeConverters
+
+import com.example.mypostsapp.room.PostListConverter
+import java.io.Serializable
+
+@Entity(tableName = "users")
+data class User(@PrimaryKey var uid: String = "",
+                var name: String? = null,
+                var email: String? = null,
+                var image: String? = null) : Serializable
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
new file mode 100644
--- /dev/null	(date 1710715044269)
+++ b/app/src/main/AndroidManifest.xml	(date 1710715044269)
@@ -0,0 +1,39 @@
+<?xml version="1.0" encoding="utf-8"?>
+<manifest xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools">
+
+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
+    <application
+        android:name=".MyApp"
+        android:allowBackup="true"
+        android:dataExtractionRules="@xml/data_extraction_rules"
+        android:fullBackupContent="@xml/backup_rules"
+        android:icon="@mipmap/ic_launcher"
+        android:label="@string/app_name"
+        android:roundIcon="@mipmap/ic_launcher_round"
+        android:supportsRtl="true"
+        android:theme="@style/Theme.MyPostsApp"
+        tools:targetApi="31">
+        <activity
+            android:name=".CreateOrUpdatePostActivity"
+            android:exported="false" />
+        <activity
+            android:name=".LoginActivity"
+            android:exported="true">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+        <activity
+            android:name=".MainActivity"
+            android:exported="false"
+            android:label="@string/app_name" />
+
+        <meta-data android:name="com.google.android.geo.API_KEY"
+            android:value="AIzaSyCyVQSVWgkdHYpdgHnTvkua45BzEH3CdBI"/>
+    </application>
+
+</manifest>
\ No newline at end of file
